# C. Доставка со склада
# Ограничение времени	4 секунды
# Ограничение памяти	1Gb
# Ввод	стандартный ввод или input.txt
# Вывод	стандартный вывод или output.txt
# В городе работает два склада, из которых заказ может быть доставлен на дом. На каждом складе работает по одному курьеру. Курьер может доставлять только один заказ одновременно.
# Сегодня поступило
# N
#  заказов, каждый заказ может быть доставлен с любого из складов. Для каждого заказа и каждого из двух складов известно время, необходимое для доставки заказа и возвращения курьера обратно на склад. Заказы могут выполняться в любом порядке. Курьер может приступать к доставке следующего заказа сразу после возвращения на склад.
# Для каждого из заказов определите, какой из курьеров должен его доставить чтобы последний из двух курьеров вернулся на склад после выполнения всех своих заказов как можно раньше.
#
# Формат ввода
# В первой строке задаётся число
# N
#  (
# 1
# ≤
# N
# ≤
# 1
# 0
# 0
# 0
# ) — количество заказов.
# В каждой из следующих
# N
#  описвыются заказы, по одному в строке. В
# i
# -й строке даны два числа
# a
# i
#  и
# b
# i
#  (
# 1
# ≤
# a
# i
# ,
# b
# i
# ≤
# 1
# 0
# 0
# ) — время доставки и возвращения первого и второго курьера соответственно для выполнения
# i
# -го заказа.
#
# Формат вывода
# Выведите
# N
#  чисел 1 или 2, задающих номер курьера, который будет выполнять соответствующий заказ.
# Если правильных ответов несколько — выведите любой из них.
#
# Пример
# Ввод	Вывод
# 3
# 1 1
# 10 2
# 1 4
# 1 2 1

n = int(input())
a = [0]*n
b = [0]*n

for i in range(n):
    a[i], b[i] = map(int, input().split())

c1 = c2 = 0
ans = [0]*n

for i in range(n):
    if c1 + a[i] <= c2 + b[i]:
        ans[i] = 1
        c1 += a[i]
    else:
        ans[i] = 2
        c2 += b[i]

if c1 > c2:
    for i in range(n):
        if ans[i] == 2:
            ans[i] = 1
        else:
            break

print(*ans)
# 25. Гвоздики
#
# В дощечке в один ряд вбиты гвоздики. Любые два гвоздика можно соединить ниточкой. Требуется соединить некоторые пары гвоздиков ниточками так, чтобы к каждому гвоздику была привязана хотя бы одна ниточка, а суммарная длина всех ниточек была минимальна.
#
# Формат ввода
# В первой строке входных данных записано число N — количество гвоздиков (2 ≤ N ≤ 100). В следующей строке заданы N чисел — координаты всех гвоздиков (неотрицательные целые числа, не превосходящие 10000).
#
# Формат вывода
# Выведите единственное число — минимальную суммарную длину всех ниточек.
#
# Пример
# Ввод	Вывод
# 6
# 3 13 12 4 14 6
# 5
from typing import List

def bounds(mapp:List[int], n:int) :
    mapp.sort()
    dp = [0] * (n)
    dp[0] = mapp[1] - mapp[0]
    if n > 2:
        dp[1] = mapp[2] - mapp[0]
        for i in range(1, n):
            dp[i] = min(dp[i - 1], dp[i - 2]) + mapp[i] - mapp[i - 1]
    else:
        return dp[0]
    return dp[n-1]


if __name__=='__main__':
    # string = '''6
    # 3 13 12 4 14 6'''.split('\n')
    # n = int(string[0])
    # mapp = list(map(int, string[1].split()))
    n = int(input())
    mapp = list(map(int, input().split()))
    print(bounds(mapp, n))
